<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">

    <import resource="config/context.xml" />
    <import resource="config/database.xml" />
    <batch:job id="helloWorldJob">
                <batch:step id="acteur">
                    <batch:tasklet>
                        <batch:chunk reader="customItemReader"
                                     processor="itemProcessor"
                                     writer="csvItemWriter"
                                     commit-interval="3"
                        >
                        </batch:chunk>
                    </batch:tasklet>
                </batch:step>
    </batch:job>

    <bean id="itemProcessor" class="org.training.spring.job.acteur.ActeurItemProcessor" />
    <bean id="acteurCustomHeader" class="org.training.spring.job.acteur.ActeurCustomHeader" />


    <!-- ItemWriter writes a line into output flat file -->
    <bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="file:csv/acteur.csv" />
        <property name="shouldDeleteIfExists" value="true" />
        <property name="lineAggregator">
            <!-- An Aggregator which converts an object into delimited list of strings -->
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";" />
                <property name="fieldExtractor">
                    <!-- Extractor which returns the value of beans property through reflection -->
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="nom, prenom, ville" />
                    </bean>
                </property>
            </bean>
        </property><property name="headerCallback" ref="acteurCustomHeader"/>

    </bean>

    <bean id="customItemReader" class="org.training.spring.job.acteur.CustomItemReader">
    </bean>
</beans>